// Generated by CoffeeScript 1.4.0
var rint_data_change, rint_to_eval_string, rint_visual_novel_parser;

rint_to_eval_string = function(object) {
  var eval_string;
  if (object.parameter) {
    eval_string = "" + object.name + "(" + (JSON.stringify(object.parameter)) + ")";
  } else {
    eval_string = "" + object.name + "()";
  }
  return eval_string;
};

rint_data_change = function(data) {
  var parsed;
  if (data.contain("\"")) {
    return data.remove("\"");
  } else if ((data === "true") || (data === "false")) {
    return Boolean(data);
  } else {
    parsed = parseFloat(data);
    if (!isNaN(parsed)) {
      return parsed;
    } else {
      throw "Unknown DataType: " + data;
    }
  }
};

rint_visual_novel_parser = function(script) {
  script = script.trimSplit("#");
  script = script.filter(function(cluster) {
    return cluster !== "";
  });
  return script = script.map(function(cluster) {
    var lines, output;
    output = {
      parameter: {}
    };
    lines = cluster.trimSplit("\n");
    lines.forEach(function(line, index) {
      var splitted;
      if (index === 0) {
        if (lines.length === 1) {
          if (line.contain(":")) {
            splitted = line.trimSplit(":");
            output.name = splitted[0];
            return output.parameter = rint_data_change(splitted[1]);
          } else {
            output.name = line.trim("");
            return delete output.parameter;
          }
        } else {
          return output.name = line.replace(":", "");
        }
      } else {
        if (line.contain(":")) {
          splitted = line.trimSplit(":");
          return output.parameter[splitted[0]] = rint_data_change(splitted[1]);
        } else {
          return output.parameter[line.trim("")] = true;
        }
      }
    });
    return output;
  });
};
